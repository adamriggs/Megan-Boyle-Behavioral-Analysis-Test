// com.app.controller.TestController// Adam Riggs//package com.app.controller {	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.events.*;	import flash.sampler.StackFrame;		public class TestController extends Sprite {				//vars				//objects		private var appData:AppData=AppData.instance;				//const		public const NAME:String="testController";		public const RETURNTYPE:String=NAME;		public const MODEL:String="testModel";				/** Storage for the singleton instance. */		private static const _instance:TestController = new TestController(TestControllerLock);				public function TestController(lock:Class){			if (lock != TestControllerLock)			{				throw new Error("Invalid TestController access.  Use TestController.instance instead.");			} else {				init();			}		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{					}				private function initEvents():void{			appData.eventManager.listen(NAME, onTestController);			appData.eventManager.listen("sql", onSQL);		}				private function initObjs():void{					}		//*****Core Functionality				private function circleClicked():void{			appData.eventManager.dispatch(MODEL, {type:"circleClicked", sender:NAME});		}				private function rewardClicked():void{			appData.eventManager.dispatch(MODEL, {type:"rewardClicked", sender:NAME});		}				private function testStarted():void{			appData.eventManager.dispatch(MODEL, {type:"testStarted", sender:NAME});		}				private function testStopped():void{			appData.eventManager.dispatch(MODEL, {type:"testStopped", sender:NAME});		}				//*****Event Handlers				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case RETURNTYPE:									break;							}		}				private function onTestController(e:MuleEvent):void{			/*debug("onTestController()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case "circleClicked":					circleClicked();				break;								case "rewardClicked":					rewardClicked();				break;								case "testStarted":					testStarted();				break;								case "testStopped":					testStopped();				break;												default:					debug("onTestController()");					debug("*type not found");					debug("e.data.sender=="+e.data.sender);					debug("e.data.type=="+e.data.type);				break;							}		}				//*****Gets and Sets				public static function get instance():TestController{return _instance;}		//*****Utility Functions				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}//end class}//end packageclass TestControllerLock{}