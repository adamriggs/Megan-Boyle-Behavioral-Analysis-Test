// com.app.controller.LoginScreenController// Adam Riggs//package com.app.controller {	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.events.*;	import flash.net.URLVariables;		public class LoginScreenController{				//vars				//objects		private var appData:AppData=AppData.instance;				//const		public const NAME:String="loginScreenController";		public const RETURNTYPE:String=NAME;		public const MODEL:String="loginScreenModel";				/** Storage for the singleton instance. */		private static const _instance:LoginScreenController = new LoginScreenController(LoginScreenControllerLock);				public function LoginScreenController(lock:Class){			// Verify that the lock is the correct class reference.			if (lock != LoginScreenControllerLock)			{				throw new Error("Invalid LoginScreenController access.  Use LoginScreenController.instance instead.");			} else {				init();			}		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{					}				private function initEvents():void{			appData.eventManager.listen(NAME, onLoginScreenController);			appData.eventManager.listen("sql", onSQL);		}				private function initObjs():void{					}		//*****Core Functionality				private function submitParticipant(id:String):void{			debug("setParticipant()");						//this should dispatch to view			appData.eventManager.dispatch("view", {type:"enterFullscreen", sender:NAME});						//this should have the return data sent to the model			appData.eventManager.dispatch("database", {type:"setParticipant", sender:NAME, id:id});			appData.eventManager.dispatch(MODEL, {type:"setParticipant", sender:NAME, id:id});					}		//*****Event Handlers				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case RETURNTYPE:									break;							}		}				private function onLoginScreenController(e:MuleEvent):void{			/*debug("onLoginScreenController()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case "submitBtnClicked":					submitParticipant(e.data.id);				break;											}		}				//*****Gets and Sets				public static function get instance():LoginScreenController{return _instance;}		//*****Utility Functions				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}//end class}//end packageclass LoginScreenControllerLock{}