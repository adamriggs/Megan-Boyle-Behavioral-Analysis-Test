// com.app.LoginScreenView// Adam Riggs//package com.app.view {	import flash.display.Sprite;	import flash.events.*;	import flash.text.TextField;	import flash.display.MovieClip;		import gs.TweenLite;		import com.adam.utils.AppData;	import com.adam.events.MuleEvent;		public class LoginScreenView extends Sprite {				//vars		private var tweenTime:Number;				//objects		private var appData:AppData=AppData.instance;				//display objects		public var participant_id:TextField;		public var submit_btn:MovieClip;		public var wait:MovieClip;		public var fail:MovieClip;		public var bkg:MovieClip;				//const		public const NAME:String="loginScreenView";		public const CONTROLLER:String="loginScreenController";		public const RETURNTYPE:String=NAME;						public function LoginScreenView(){						init();		}		//*****Initialization Routines				public function init(){			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{			tweenTime=.1;		}				private function initEvents():void{			appData.eventManager.listen(NAME, onLoginScreenView);			appData.eventManager.listen("sql", onSQL);		}				private function initObjs():void{			participant_id.text="";						wait.visible=false;			wait.alpha=0;			fail.visible=false;			fail.alpha=0;						submit_btn.over.alpha=0;			submit_btn.hot.buttonMode=true;			submit_btn.hot.addEventListener(MouseEvent.MOUSE_OVER, onSubmitOver);			submit_btn.hot.addEventListener(MouseEvent.MOUSE_OUT, onSubmitOut);			submit_btn.hot.addEventListener(MouseEvent.CLICK, onSubmitClick);		}		//*****Core Functionality				public function showWait():void{			wait.visible=true;			TweenLite.to(wait, .1, {alpha:1});		}				public function showFail():void{			fail.visible=true;			TweenLite.to(fail, tweenTime, {alpha:1});		}				public function resizeMe():void{			debug("resizeMe()");		}		//*****Event Handlers				private function onSubmitOver(e:MouseEvent):void{			TweenLite.to(submit_btn.over, tweenTime, {alpha:1});		}				private function onSubmitOut(e:MouseEvent):void{			TweenLite.to(submit_btn.over, tweenTime, {alpha:0});		}				private function onSubmitClick(e:MouseEvent):void{			if(participant_id.text!=""){				debug("submit click event fired");				/*appData.eventManager.dispatch("database", {type:"setParticipant", sender:NAME, id:participant_id.text});				appData.eventManager.dispatch("main", {type:"enterFullscreen", sender:NAME});*/								appData.eventManager.dispatch(CONTROLLER, {type:"submitBtnClicked", sender:NAME, id:participant_id.text});								showWait();			}		}				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case NAME:								break;											}		}				private function onLoginScreenView(e:MuleEvent):void{			/*debug("onLoginScreen()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case "fail":					showFail();				break;							}		}				//*****Gets and Sets						//*****Utility Functions				public function show(){			this.visible = true;		}				public function hide(){			this.visible = false;		}				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}}