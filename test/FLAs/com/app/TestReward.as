// com.app.TestReward// Adam Riggs//package com.app {	import flash.display.Sprite;	import flash.events.*;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.filters.GlowFilter;	import flash.filters.DropShadowFilter;	import flash.utils.Timer;		import gs.TweenLite;		import com.adam.utils.AppData;	import com.adam.events.MuleEvent;		public class TestReward extends Sprite {				private var appData:AppData=AppData.instance;				private var rewardText:TextField;		private var rewardFormat:TextFormat;		private var rewardTweenTime:Number;				private var filtersArray:Array;		private var rewardGlow:GlowFilter;		private var rewardDropShadow:DropShadowFilter;				private var rewardHot:Sprite;				//for how long the reward stays visible after it appears		private var vTimer:Timer;		private var vInterval:uint;				public function TestReward(){						init();		}		//*****Initialization Routines				public function init(){			//this.visible = false;			trace("TestReward() init");						initVars();			initHot();			initTextFormat();			initTextFilters();			initText();						buttonMode=true;		}				private function initVars():void{			vInterval=5000; //5 seconds			vTimer=new Timer(vInterval, 1);			vTimer.addEventListener("timer", onVTimer);						rewardTweenTime=.5;		}				private function initHot():void{			rewardHot=new Sprite();			rewardHot.alpha=0;			rewardHot.buttonMode=true;			//rewardHot.addEventListener(MouseEvent.CLICK, onClick);			addChild(rewardHot);		}				private function initTextFormat():void{			rewardFormat=new TextFormat();			rewardFormat.size=24;		}				private function initTextFilters():void{			filtersArray=new Array();						rewardGlow=new GlowFilter(0xFFFFFF,.8,30,30,3);			//filtersArray.push(rewardGlow);						rewardDropShadow=new DropShadowFilter();			rewardDropShadow.distance=0;			rewardDropShadow.angle=45;			rewardDropShadow.color=0xFFFFFF;			rewardDropShadow.alpha=.5;			rewardDropShadow.blurX=10;			rewardDropShadow.blurY=10;			rewardDropShadow.strength=10;			rewardDropShadow.quality=15;			rewardDropShadow.inner=false;			rewardDropShadow.hideObject=false;			filtersArray.push(rewardDropShadow);		}				private function initText():void{			rewardText=new TextField();			rewardText.htmlText="$.05";			rewardText.autoSize="left";			rewardText.selectable=false;						rewardText.setTextFormat(rewardFormat);						rewardText.filters=[rewardGlow,rewardDropShadow];						addChildAt(rewardText,0);			resizeHot();		}		//*****Core Functionality				private function resizeHot():void{			rewardHot.graphics.clear();			rewardHot.graphics.beginFill(0x000000);			rewardHot.graphics.drawRect(0,0,rewardText.width,rewardText.height);		}				//*****Event Handlers				private function onVTimer(e:TimerEvent):void{			alpha=0;			visible=false;		}		//*****Gets and Sets						//*****Utility Functions				public function show(){			//this.visible = true;			x=appData.stageWidth-width-5;			y=10;			alpha=1;			visible=true;		}				public function hide(){			//this.visible = false;			TweenLite.to(this, rewardTweenTime,{x:0, alpha:0});		}				}}