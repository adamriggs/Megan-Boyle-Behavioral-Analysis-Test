// com.adam.db.Database// Adam Riggs//package com.adam.db {	import com.adam.db.SQLProxy;	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.xml.*;	import flash.net.URLVariables;		public class Database {				private var appData:AppData=AppData.instance;				//control variables		private var sql:SQLProxy;		//public var currentTestModel:CurrentTestModel;		//public var testDataModel:TestDataModel;				public var dataTimerInterval:Number;				//data								/** Storage for the singleton instance. */		private static const _instance:Database = new Database(DatabaseLock);				public function Database(lock:Class){			// Verify that the lock is the correct class reference.			if (lock != DatabaseLock)			{				throw new Error("Invalid Database access.  Use Database.instance instead.");			} else {				init();			}		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();						//initCurrentTestModel();			//initTestDataModel();					}				private function initVars():void{			sql=SQLProxy.instance;						dataTimerInterval=2000;					}				private function initEvents():void{			appData.eventManager.listen("database", onDatabase);			appData.eventManager.listen("sql", onSQL);		}				private function initCurrentTestModel():void{			//currentTestModel=CurrentTestModel.instance;		}				private function initTestDataModel():void{			//testDataModel=TestDataModel.instance;		}		//*****Core Functionality				/*private function startData():void{			debug("startData()");			currentTestModel.startData();			testDataModel.startData();		}				private function stopData():void{			debug("stopData()");			currentTestDataModel.stopData();			currentTestStateModel.stopData();			testDataModel.stopData();		}*/						//*****Event Handlers				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){															}		}				private function onDatabase(e:MuleEvent):void{			/*debug("onDatabase()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case "startData":					//startData();				break;							}		}		//*****Gets and Sets				public static function get instance():Database{return _instance;}						//*****Utility Functions						//**debug		private function debug(str:String):void{			trace("Database: "+str);			appData.eventManager.dispatch("debug", {msg:str, sender:"Database"});		}				}//end class}//end packageclass DatabaseLock{} 