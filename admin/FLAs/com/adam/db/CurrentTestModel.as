// com.adam.db.CurrentTestModel// Adam Riggs//package com.adam.db{	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.events.*;	import flash.utils.Timer;		public class CurrentTestModel {				private var appData:AppData=AppData.instance;				//data				//control vars		private var currentTestStateModel:CurrentTestStateModel;		private var currentTestDataModel:CurrentTestDataModel;				//local vars						//instance		private static const _instance:CurrentTestModel = new CurrentTestModel(CurrentTestModelLock);				public function CurrentTestModel(lock:Class){			// Verify that the lock is the correct class reference.			if (lock != CurrentTestModelLock)			{				throw new Error("Invalid CurrentTestModel access.  Use CurrentTestModel.instance instead.");			} else {				init();			}		}		//*****Initialization Routines				public function init():void{			//this.visible = false;			debug("CurrentTestModel() init");						initVars();			initEvents();			initCurrentTestStateModel();			initCurrentTestDataModel();		}				private function initVars():void{			//local vars					}				private function initEvents():void{			appData.eventManager.listen("currentTestModel", onCurrentTestModel);			appData.eventManager.listen("sql", onSQL);		}				private function initCurrentTestStateModel():void{			currentTestStateModel=CurrentTestStateModel.instance;		}				private function initCurrentTestDataModel():void{			currentTestDataModel=CurrentTestDataModel.instance;		}		//*****Core Functionality				public function startData():void{			debug("startData()");			currentTestStateModel.startData();			currentTestDataModel.startData();		}				private function stopData():void{			debug("stopData()");			currentTestStateModel.stopData();			currentTestDataModel.stopData();					}		//*****Event Handlers				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){															}		}				private function onCurrentTestModel(e:MuleEvent):void{			/*debug("onCurrentTestModel()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){															}		}				//*****Gets and Sets				public static function get instance():CurrentTestModel{return _instance;}				//*****Utility Functions						//**debug		private function debug(str:String):void{			trace("CurrentTestModel: "+str);			appData.eventManager.dispatch("debug", {msg:str, sender:"CurrentTestModel"});		}				}//end class}//end packageclass CurrentTestModelLock{}