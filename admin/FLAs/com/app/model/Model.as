// com.app.model.Model// Adam Riggs//package com.app.model {	import com.adam.db.SQLProxy;	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.xml.*;	import flash.net.URLVariables;		public class Model {				private var appData:AppData=AppData.instance;				//vars		private var _dataTimerInterval:Number;				//objects		//private var sql:SQLProxy;		public var currentTestDataModel:CurrentTestDataModel;		public var currentTestStateModel:CurrentTestStateModel;		public var testDataModel:TestDataModel;		public var historicalDataModel:HistoricalDataModel;				//const		public const NAME:String="model";		public const RETURNTYPE:String=NAME;				/** Storage for the singleton instance. */		private static const _instance:Model = new Model(ModelLock);				public function Model(lock:Class){			// Verify that the lock is the correct class reference.			if (lock != ModelLock)			{				throw new Error("Invalid Model access.  Use Model.instance instead.");			} else {				//init();			}		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();					}				private function initVars():void{						_dataTimerInterval=2000;					}				private function initEvents():void{			appData.eventManager.listen(NAME, onModel);			appData.eventManager.listen("sql", onSQL);		}				private function initObjs():void{			//sql=SQLProxy.instance;			testDataModel=TestDataModel.instance;			currentTestStateModel=CurrentTestStateModel.instance;			currentTestDataModel=CurrentTestDataModel.instance;			historicalDataModel=HistoricalDataModel.instance;		}		//*****Core Functionality				//*****Event Handlers				private function onSQL(e:MuleEvent):void{			/*debug("onSQL()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){								case NAME:								break;											}		}				private function onModel(e:MuleEvent):void{			/*debug("onModel()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){											}		}		//*****Gets and Sets				public static function get instance():Model{return _instance;}				public function get dataTimerInterval():Number{return _dataTimerInterval;}						//*****Utility Functions						//**debug		private function debug(str:String):void{			trace(NAME+": "+str);			appData.eventManager.dispatch("debug", {msg:str, sender:"Model"});		}				}//end class}//end packageclass ModelLock{} 